<Window x:Class="HomeCalendarWPF.CalendarItems.Window"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:HomeCalendarWPF.CalendarItems"
        mc:Ignorable="d"
        Title="Home Calendar App" Height="450" Width="800"
        WindowStartupLocation="CenterScreen">
    <Grid Background="{StaticResource darkBackground}">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <StackPanel Orientation="Horizontal" TextBlock.Foreground="{StaticResource darkForeground}" Margin="5">
            <TextBlock VerticalAlignment="Center" Text="Opened file:" />
            <TextBlock Name="directoryLocation" VerticalAlignment="Center" Margin="10, 0, 10, 0"/>
            <Button Content="Change" Click="ButtonChangeOpenedFile_Click" />
            <StackPanel x:Name="stk_search" Visibility="Collapsed" Orientation="Horizontal" TextBlock.Foreground="{StaticResource darkForeground}">
                <TextBlock Text="Search:" Margin="15,0,10,0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <TextBox x:Name="txb_search" Width="100"></TextBox>
                <Button Margin="15,0,10,0" Content="Search" Click="ButtonSearchClick"></Button>
            </StackPanel>
            </StackPanel>
        <Grid Grid.Row="1">
            <Grid.Resources>
                <!--https://stackoverflow.com/a/3173443/23561820-->
                <BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>
                <Style TargetType="{x:Type GroupBox}">
                    <Setter Property="BorderBrush" Value="#D5DFE5" />
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type GroupBox}">
                                <Grid SnapsToDevicePixels="true">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="6" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="6" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="6" />
                                    </Grid.RowDefinitions>
                                    <Border CornerRadius="4" Grid.Row="1" Grid.RowSpan="3" Grid.Column="0" Grid.ColumnSpan="4" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="Transparent" Background="{TemplateBinding Background}" />
                                    <Border Name="Header" Padding="3,1,3,0" Grid.Row="0" Grid.RowSpan="2" Grid.Column="1">
                                        <ContentPresenter ContentSource="Header" RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Border>
                                    <ContentPresenter Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    <Border Grid.Row="1" Grid.RowSpan="3" Grid.ColumnSpan="4"  BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="3">
                                        <Border.OpacityMask>
                                            <MultiBinding Converter="{StaticResource BorderGapMaskConverter}" ConverterParameter="7">
                                                <Binding ElementName="Header" Path="ActualWidth" />
                                                <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}" />
                                                <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}" />
                                            </MultiBinding>
                                        </Border.OpacityMask>
                                    </Border>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Grid.Resources>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="152*" />
                <ColumnDefinition Width="88*"/>
                <ColumnDefinition Width="109*" />
                <ColumnDefinition Width="451*"/>
            </Grid.ColumnDefinitions>
            <StackPanel Margin="12,12,12,12" Grid.ColumnSpan="2">
                <StackPanel.Resources>
                    <!--https://stackoverflow.com/a/59599517/23561820-->
                    <Style TargetType="CheckBox">
                        <Setter Property="SnapsToDevicePixels" Value="true" />
                        <Setter Property="OverridesDefaultStyle" Value="true" />
                        <Setter Property="FocusVisualStyle" Value="{DynamicResource CheckBoxFocusVisual}" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type CheckBox}">
                                    <BulletDecorator Background="Transparent">
                                        <BulletDecorator.Bullet>
                                            <Border x:Name="Border" Width="13" Height="13" CornerRadius="0" BorderThickness="1">
                                                <Border.BorderBrush>
                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                        <LinearGradientBrush.GradientStops>
                                                            <GradientStopCollection>
                                                                <!--border-->
                                                                <GradientStop Color="DarkGray" Offset="0.0" />
                                                                <GradientStop Color="DarkGray" Offset="1.0" />
                                                            </GradientStopCollection>
                                                        </LinearGradientBrush.GradientStops>
                                                    </LinearGradientBrush>
                                                </Border.BorderBrush>
                                                <Border.Background>
                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                        <LinearGradientBrush.GradientStops>
                                                            <GradientStopCollection>
                                                                <!--background-->
                                                                <GradientStop Color="LightGray" />
                                                                <GradientStop Color="LightGray" Offset="1.0" />
                                                            </GradientStopCollection>
                                                        </LinearGradientBrush.GradientStops>
                                                    </LinearGradientBrush>
                                                </Border.Background>
                                                <Grid>
                                                    <Path Visibility="Collapsed" Width="7" Height="7" x:Name="CheckMark" SnapsToDevicePixels="False" StrokeThickness="1.5" Data="M 0 3 L 3 7 M 3 7 L 7 0">
                                                        <!--<Path Visibility="Collapsed" Width="7" Height="7" x:Name="CheckMark" SnapsToDevicePixels="False" StrokeThickness="2" Data="M 0 0 L 7 7 M 0 7 L 7 0">-->
                                                        <Path.Stroke>
                                                            <SolidColorBrush Color="Black" />
                                                        </Path.Stroke>
                                                    </Path>
                                                    <Path Visibility="Collapsed" Width="7" Height="7" x:Name="InderminateMark" SnapsToDevicePixels="False" StrokeThickness="2" Data="M 0 7 L 7 0">
                                                        <Path.Stroke>
                                                            <SolidColorBrush Color="Black" />
                                                        </Path.Stroke>
                                                    </Path>
                                                </Grid>
                                            </Border>
                                        </BulletDecorator.Bullet>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal" />
                                                <VisualState x:Name="MouseOver">
                                                    <Storyboard>
                                                        <!--background on hover-->
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                            <EasingColorKeyFrame KeyTime="0" Value="DarkGray" />
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                            <EasingColorKeyFrame KeyTime="0" Value="DarkGray" />
                                                        </ColorAnimationUsingKeyFrames>
                                                        <!--border on hover-->
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                            <EasingColorKeyFrame KeyTime="0" Value="Gray" />
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                            <EasingColorKeyFrame KeyTime="0" Value="Gray" />
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Pressed">
                                                    <Storyboard>
                                                        <!--background on press-->
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                            <EasingColorKeyFrame KeyTime="0" Value="Gray" />
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                            <EasingColorKeyFrame KeyTime="0" Value="Gray" />
                                                        </ColorAnimationUsingKeyFrames>
                                                        <!--border on press-->
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                            <EasingColorKeyFrame KeyTime="0" Value="DimGray" />
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                            <EasingColorKeyFrame KeyTime="0" Value="DimGray" />
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Disabled" />
                                            </VisualStateGroup>
                                            <VisualStateGroup x:Name="CheckStates">
                                                <VisualState x:Name="Checked">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CheckMark">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Unchecked" />
                                                <VisualState x:Name="Indeterminate">
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="InderminateMark">
                                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <ContentPresenter Margin="4,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" RecognizesAccessKey="True" />
                                    </BulletDecorator>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style TargetType="DatePickerTextBox">
                        <Setter Property="Foreground" Value="{StaticResource darkForeground2}" />
                        <Setter Property="Background" Value="{StaticResource darkBackground2}" />
                    </Style>
                </StackPanel.Resources>
                <GroupBox Header="Filter" Foreground="{StaticResource darkForeground}" BorderBrush="{StaticResource darkBorder}">
                    <StackPanel Margin="0, 5">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <CheckBox VerticalAlignment="Center" Content="Min Start Date" Checked="CheckboxMinStartDate_Checked" Unchecked="CheckboxMinStartDate_Unchecked" />
                            <DatePicker x:Name="minStartDatePicker" Grid.Column="1" BorderThickness="0" IsEnabled="False" SelectedDateChanged="MinStartDatePicker_SelectedDateChanged" />
                        </Grid>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="102*" />
                                <ColumnDefinition Width="91*" />
                                <ColumnDefinition Width="11*"/>
                            </Grid.ColumnDefinitions>
                            <CheckBox VerticalAlignment="Center" Content="Max Start Date" Checked="CheckboxMaxStartDate_Checked" Unchecked="CheckboxMaxStartDate_Unchecked" />
                            <DatePicker x:Name="maxStartDatePicker" Grid.Column="1" BorderThickness="0" IsEnabled="False" Grid.ColumnSpan="2" SelectedDateChanged="MaxStartDatePicker_SelectedDateChanged" />
                        </Grid>
                        <ComboBox FontSize="10" Margin="0, 4" x:Name="comboboxCategories">
                            <ComboBoxItem Content="Any Category" IsSelected="True" />
                        </ComboBox>
                    </StackPanel>
                </GroupBox>
                <GroupBox Header="Summary" Foreground="{StaticResource darkForeground}" BorderBrush="{StaticResource darkBorder}" Margin="0, 10, 0, 20">
                    <StackPanel>
                        <CheckBox Click="CheckBoxByMonth_Click" Content="By Month" Margin="0, 0, 0, 2" />
                        <CheckBox Click="CheckBoxByCategory_Click" Content="By Category" Margin="0, 2, 0, 0" />
                    </StackPanel>
                </GroupBox>
                <Button Content="Add Event" Click="ButtonAddEvent_Click" />
            </StackPanel>

            <DataGrid IsReadOnly="True" MouseDoubleClick="datagridCalendarItems_MouseDoubleClick" Grid.Column="2" ColumnWidth="*" HorizontalGridLinesBrush="{StaticResource darkBorder}" VerticalGridLinesBrush="{StaticResource darkBorder}" Background="{StaticResource darkBackground}" BorderBrush="{StaticResource darkBorder}" BorderThickness="2" AutoGenerateColumns="False" x:Name="datagridCalendarItems" CanUserAddRows="False" Grid.ColumnSpan="2">

                <DataGrid.Resources>
                    <Style TargetType="DataGridColumnHeader">
                        <Setter Property="Foreground" Value="{StaticResource darkForeground2}" />
                        <Setter Property="Background" Value="{StaticResource darkBackground2}" />
                    </Style>
                    <Style TargetType="DataGridRowHeader">
                        <Setter Property="Foreground" Value="{StaticResource darkForeground2}" />
                        <Setter Property="Background" Value="{StaticResource darkBackground2}" />
                    </Style>
                    <Style TargetType="DataGridRow">
                        <Setter Property="Foreground" Value="{StaticResource darkForeground}" />
                        <Setter Property="Background" Value="{StaticResource darkBackground}" />
                    </Style>
                </DataGrid.Resources>
                <DataGrid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Delete" InputGestureText="Ctrl+X" Click="Delete_Click" x:Name="MenuItem_Delete"/>
                        <MenuItem Header="Update" InputGestureText="Ctrl+M" Click="Update_Click" x:Name="MenuItem_Update"/>
                        <Separator />
                        <MenuItem Header="Cancel" />
                    </ContextMenu>
                </DataGrid.ContextMenu>
            </DataGrid>

        </Grid>
    </Grid>
</Window>
